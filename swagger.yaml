openapi: '3.0.0'
info:
  version: '2.0.0'
  title: 'FlairWars API'
  description: |-
    An API for FlairWars bots!
    Authorization
    Authorization is done using an Authorization Header. In the body of the header, please use "Basic YOUR-API-KEY-HERE". To get more application permissions, at the moment, you must request them by directly contacting @rebalint, and processes for automating this are being engineered and worked on otherwise.
servers:
  - url: http://localhost:5000
  - url: http://api.flairwars.com
paths:
  /colors:  
    get:
      summary: Get every color
      tags:
        - FWColor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fwColor'
        '400':
          description: 'Bad Request: Incomplete request body'
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error'
    post:
      summary: Add a new color
      tags:
        - FWColor
      responses:
        '201':
          description: Created
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ColorName:
                  type: string
                MainSub:
                  type: string
                FlagImgUrl:
                  type: string
                ServerInviteUrl:
                  type: string
                DefaultColorRole:
                  type: string
              required:
                - ColorName
                - MainSub
                - FlagImgUrl
                - ServerInviteUrl,
                - DefaultColorRole
    #put:
    #  summary: Update a color
    #  tags:
    #    - FWColor
    #  responses:
  /fwUsers:
    post:
      summary: Create an FWUser
      tags:
        - FWUser
      responses:
        '201':
          description: Created
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                redditUsername:
                  type: string
                discordMemberId:
                  type: string
              required:
                - redditUsername
                - discordMemberId
    get:
      summary: Read all
      tags:
        - FWUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FWUser'
        '400':
          description: 'Bad Request: Incomplete request body'
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error' 
    delete:
      summary: Delete all
      tags:
        - FWUser
      responses:
        '204':
          description: 'No Content: Delete operation succeeded'
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database error'
  /fwUsers/{FWUser}:
    parameters:
      - schema:
          type: string
        name: FWUser
        in: path
        required: true
    post:
      summary: Attempt login
      tags:
        - FWUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FWUser'
        '403':
          description: 'Forbidden: Incorrect name or password'
        '500':
          description: 'Server Error: Database Error'
    get:
      summary: Read one FWUser
      tags:
        - FWUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FWUser'
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error'
  /fwUsers/{FWUser}/credentials:
    parameters:
      - schema:
          type: string
        name: FWUser
        in: path
        required: true
    post:
      description: Set password
      tags:
        - FWUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FWUser'
        '404':
          description: 'Not Found: Resource not found'
        '500':
          description: 'Server Error: Database Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                WPPassword:
                  type:
                    string
              required:
                - WPPassword

components:
  schemas:
    fwColor:
      title: FW Color
      type: object
      description: Data describing a color in FW
      properties:
        ColorName:
          type: string
        Subreddits:
          type: array
          items:
            type: object
            properties:
              subredditType: 
                type: string
              subredditName:
                type: string
        Flags:
          type: array
          items:
            type: object
            properties:
              flagType:
                type: string
              flagUrl:
                type: string
        Servers:
          type: array
          items:
            type: object
            properties:
              serverType:
                type: string
              serverInviteUrl:
                type: string
        GovernmentRoles:
          type: array
          items:
            type: object
            properties:
              roleTitle:
                type: string
              roleDiscordRoles:
                type: array
                items:
                  type: object
                  properties:
                    ServerID:
                      type: string
                    RoleID:
                      type: string
        VictoryTracker:
          type: array
          items:
            type: object
            properties:
              trackerType:
                type: string
              trackerData:
                type: object
    FWUser:
      title: FW User
      type: object
      properties:
        RedditInfo:
          $ref: '#/components/schemas/RedditUser'
        DiscordID:
          type: string
        WPNickname:
          type: string
        WPPassword:
          type: string
        Permissions:
          type: array
          items:
            type: string
        GovRoles:
          type: array
          items:
            type: string
    RedditUser:
      title: Reddit User
      properties:
        RedditUsername:
          type: string
        FlairwarsColor:
          $ref: '#/components/schemas/fwColor'
        CountAliases:
          type: array
          items:
            type: string
        Verified:
          type: boolean