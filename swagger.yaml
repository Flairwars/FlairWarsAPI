openapi: 3.0.0
info:
  title: FlairWarsAPI
  version: '1.0'
  contact:
    name: BlastoGypsy
    email: blastogypsy@gmail.com
  description: An API for FlairWars bots!
servers:
  - url: 'https://api.flairwars.com'
paths:
  /users:
    get:
      summary: GET /users
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
      operationId: get-users
      parameters:
        - schema:
            type: string
          in: query
          name: RedditUsername
          description: Query with a user's Reddit username
        - schema:
            type: string
          in: query
          name: FlairwarsColor
          description: Query with a user's Flairwars Color
        - schema:
            type: string
          in: query
          name: DiscordMemberID
          description: Query with a user's Discord ID
      description: Retrieve user information
    post:
      summary: POST /users
      operationId: post-users
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: 'Conflict: User exists'
        '500':
          description: 'Internal Server Error: Database Communication Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                DiscordMemberID:
                  type: string
                FlairwarsColor:
                  type: string
                RedditUsername:
                  type: string
              required:
                - DiscordMemberID
      description: Create a new user
      tags:
        - User
      parameters: []
      security:
        - Authorization: []
  '/users/id/{DiscordID}':
    parameters:
      - schema:
          type: string
        name: DiscordID
        in: path
        required: true
        description: User's Discord ID
    put:
      summary: PUT /users/id/DiscordID
      operationId: put-users-id-DiscordID
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Update a user's Flairwars Color and Reddit Username
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RedditUsername:
                  type: string
                FlairwarsColor:
                  type: string
      tags:
        - User
      security:
        - Authorization: []
  /application:
    post:
      summary: POST /application
      operationId: post-api_auth
      responses:
        '201':
          description: Application Secret
        '400':
          description: 'Bad Request: Incomplete body'
        '409':
          description: 'Conflict: App with name already exists'
      description: Register your application
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationName:
                  type: string
              required:
                - ApplicationName
        description: Send your application name. This will be used to log your application's request and manage your application's permissions.
    parameters: []
  '/application/{AppName}':
    parameters:
      - schema:
          type: string
        name: AppName
        in: path
        required: true
    put:
      summary: PUT /application/AppName
      operationId: put-api_auth-AppName
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Application
      description: Grant an application additional permissions
      parameters:
        - schema:
            type: string
          in: query
          name: action
          description: The action you are performing (either add or remove)
          required: true
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Permissions:
                  type: string
  /currency:
    get:
      summary: GET /currency
      tags:
        - Currency
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency'
      operationId: get-currency
      description: Get currency information
      parameters:
        - schema:
            type: string
          in: query
          name: Name
          description: Query by name
        - schema:
            type: string
          in: query
          name: Symbol
          description: Query by symbol
        - schema:
            type: string
          in: query
          name: ID
          description: Query by ID
    post:
      summary: POST /currency
      operationId: post-currency
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: Create a currency
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Symbol:
                  type: string
              required:
                - Name
                - Symbol
        description: Request body for creating a currency
      tags:
        - Currency
  '/currency/{CurrencyID}':
    parameters:
      - schema:
          type: string
        name: CurrencyID
        in: path
        required: true
    get:
      summary: GET /currency/CurrencyID
      tags:
        - Currency
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
      operationId: get-currency-CurrencyID
      description: Retrieve a specific currency
    delete:
      summary: DELETE /currency/CurrencyID
      operationId: delete-currency-CurrencyID
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Remove a currency
      security:
        - Authorization: []
      tags:
        - Currency
    put:
      summary: PUT /currency/CurrencyID
      operationId: put-currency-CurrencyID
      responses:
        '200':
          description: OK
      description: Update currency information
      tags:
        - Currency
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Symbol:
                  type: string
        description: New info
  '/currency/{CurrencyID}/mint':
    parameters:
      - schema:
          type: string
        name: CurrencyID
        in: path
        required: true
    put:
      summary: PUT /currency/CurrencyID/mint
      operationId: put-currency-CurrencyID-mint
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
      tags:
        - Currency
      description: Add money to a currency's stockpile
      parameters:
        - schema:
            type: string
          in: query
          name: amount
          required: true
          description: The amount to add
    delete:
      summary: DELETE /currency/CurrencyID/mint
      operationId: delete-currency-CurrencyID-mint
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
      tags:
        - Currency
      description: Remove money from a currency's stockpile
      parameters:
        - schema:
            type: string
          in: query
          name: amount
          description: The amount to remove
components:
  schemas:
    user:
      title: User
      type: object
      description: User data pulled from the database
      x-examples:
        Example:
          DiscordMemberID: '000000000000000000'
          Color: red
          RedditName: username
      properties:
        DiscordMemberID:
          type: string
        FlairwarsColor:
          type: string
        RedditUsername:
          type: string
      required:
        - DiscordMemberID
    currency:
      title: currency
      type: object
      properties:
        id:
          type: string
        Name:
          type: string
        Symbol:
          type: string
        RemainingStockpile:
          type: integer
        Stockpile:
          type: integer
      description: Model of a Currency
  securitySchemes:
    Authorization:
      name: authorization
      type: apiKey
      in: header
tags:
  - name: User
  - name: Application
  - name: Currency
